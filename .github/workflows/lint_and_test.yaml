name: lint_and_test

on:
  push:

jobs:
  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: ^1.21
      - uses: actions/checkout@v4
      - name: setup asdf
        uses: asdf-vm/actions/setup@6278efebb38ae025cc91dd008910f549e775a8c8
      - name: set env ASDF_PYTHON_DEFAULT_PACKAGES_FILE
        run: |
          export ASDF_PYTHON_DEFAULT_PACKAGES_FILE=$(pwd)
          echo "legacy_version_file = yes" > ~/.asdfrc
      - name: asdf cache
        id: asdf_cache_id
        uses: actions/cache@v3
        with:
          path: ~/.asdf
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}
          restore-keys: |
            ${{ runner.os }}-asdf-
      - name: asdf install
        if: steps.asdf_cache_id.outputs.cache-hit != 'true'
        uses: asdf-vm/actions/install@6278efebb38ae025cc91dd008910f549e775a8c8
      - name: pre-commit install
        run: pre-commit install
      - name: asdf go cache
        id: asdf_go_cache_id
        uses: actions/cache@v3
        with:
          path: ~/.asdf/installs/golang
          key: ${{ runner.os }}-asdf-${{ hashFiles('.tool-versions') }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-asdf-go-
      - name: go mod tidy and install
        if: steps.asdf_go_cache_id.outputs.cache-hit != 'true'
        run: |
          go mod tidy
          make install-go-tools
      - name: go mod cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
      - name: build
        run: make build
      - name: testing
        run: make test
